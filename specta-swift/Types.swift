// This file has been generated by Specta. DO NOT EDIT.
import Foundation

struct Admin: Codable {
    let id: UInt32
    let name: String
    let permissions: [String]
    let level: UInt8
}

enum ApiResponse<T>: Codable {
    case success(data: T, status: UInt16, headers: [(String, String)])
    case error(code: UInt32, message: String, details: T?)
    case loading(progress: Float, estimatedTime: UInt64?)
    case redirect(url: String, permanent: Bool)
}

struct Circle: Codable {
    let center: Point
    let radius: Double
}

enum ComplexUnion: Codable {
    case none
    case tuple(String, UInt32, Bool)
    case namedfields(id: UInt32, name: String, active: Bool)
    case userstruct(User)
    case usertype(UserType)
    case complex(user: User, metadata: [String], settings: Admin?)
}

enum DatabaseResult<T, E>: Codable {
    case ok(data: T, affectedRows: UInt64, executionTime: Double)
    case err(error: E, query: String, retryCount: UInt32)
    case connectionerror(host: String, port: UInt16, reason: String)
    case timeout(duration: Double, operation: String)
}

struct Guest: Codable {
    let sessionId: String
    let expiresAt: String
}

struct Line: Codable {
    let start: Point
    let end: Point
}

struct Point: Codable {
    let x: Double
    let y: Double
}

struct Rectangle: Codable {
    let topLeft: Point
    let bottomRight: Point
}

enum Shape: Codable {
    case none
    case point(Double, Double)
    case circle(center: Point, radius: Double)
    case rectangle(Rectangle)
    case line(start: Point, end: Point)
    case complex(shapes: [Shape], metadata: String?)
}

struct User: Codable {
    let id: UInt32
    let name: String
    let email: String?
    let isActive: Bool
    let metadata: UserMetadata
    let tags: [String]
    let scores: [Double]
}

struct UserMetadata: Codable {
    let createdAt: String
    let lastLogin: String?
    let preferences: UserPreferences
}

struct UserPreferences: Codable {
    let theme: String
    let notifications: Bool
    let language: String
}

enum UserType: Codable {
    case anonymous
    case user(String, UInt32)
    case admin(id: UInt32, name: String, permissions: [String])
    case registered(User)
    case superadmin(Admin)
    case guest(info: Guest, createdAt: String)
}

